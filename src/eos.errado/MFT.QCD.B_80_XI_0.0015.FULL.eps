%!PS-Adobe-2.0 EPSF-2.0
%%Title: MFT.QCD.B_80_XI_0.0015.FULL.eps
%%Creator: gnuplot 4.6 patchlevel 4
%%CreationDate: Sun Dec 13 02:38:17 2015
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.6 (September 2012)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
% Encoding for ISO-8859-1 (also called Latin1)
%
/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
currentdict /CharStrings known {
	CharStrings /Idieresis known {
		/Encoding ISOLatin1Encoding def } if
} if
currentdict end definefont
} def
/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
/Helvetica reencodeISO def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (MFT.QCD.B_80_XI_0.0015.FULL.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 4)
  /Author (rsouza)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sun Dec 13 02:38:17 2015)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
1.000 UL
LTb
770 448 M
63 0 V
6114 0 R
-63 0 V
stroke
686 448 M
[ [(Helvetica) 140.0 0.0 true true 0 (-500)]
] -46.7 MRshow
1.000 UL
LTb
770 1044 M
63 0 V
6114 0 R
-63 0 V
stroke
686 1044 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MRshow
1.000 UL
LTb
770 1640 M
63 0 V
6114 0 R
-63 0 V
stroke
686 1640 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 500)]
] -46.7 MRshow
1.000 UL
LTb
770 2236 M
63 0 V
6114 0 R
-63 0 V
stroke
686 2236 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1000)]
] -46.7 MRshow
1.000 UL
LTb
770 2831 M
63 0 V
6114 0 R
-63 0 V
stroke
686 2831 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1500)]
] -46.7 MRshow
1.000 UL
LTb
770 3427 M
63 0 V
6114 0 R
-63 0 V
stroke
686 3427 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 2000)]
] -46.7 MRshow
1.000 UL
LTb
770 4023 M
63 0 V
6114 0 R
-63 0 V
stroke
686 4023 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 2500)]
] -46.7 MRshow
1.000 UL
LTb
770 4619 M
63 0 V
6114 0 R
-63 0 V
stroke
686 4619 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 3000)]
] -46.7 MRshow
1.000 UL
LTb
770 448 M
0 63 V
0 4108 R
0 -63 V
stroke
770 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MCshow
1.000 UL
LTb
1542 448 M
0 63 V
0 4108 R
0 -63 V
stroke
1542 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1000)]
] -46.7 MCshow
1.000 UL
LTb
2314 448 M
0 63 V
0 4108 R
0 -63 V
stroke
2314 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 2000)]
] -46.7 MCshow
1.000 UL
LTb
3086 448 M
0 63 V
0 4108 R
0 -63 V
stroke
3086 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 3000)]
] -46.7 MCshow
1.000 UL
LTb
3859 448 M
0 63 V
0 4108 R
0 -63 V
stroke
3859 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 4000)]
] -46.7 MCshow
1.000 UL
LTb
4631 448 M
0 63 V
0 4108 R
0 -63 V
stroke
4631 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 5000)]
] -46.7 MCshow
1.000 UL
LTb
5403 448 M
0 63 V
0 4108 R
0 -63 V
stroke
5403 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 6000)]
] -46.7 MCshow
1.000 UL
LTb
6175 448 M
0 63 V
0 4108 R
0 -63 V
stroke
6175 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 7000)]
] -46.7 MCshow
1.000 UL
LTb
6947 448 M
0 63 V
0 4108 R
0 -63 V
stroke
6947 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 8000)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
770 4619 N
770 448 L
6177 0 V
0 4171 V
-6177 0 V
Z stroke
LCb setrgbcolor
112 2533 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 200.0 0.0 true true 0 (Pressure)]
] -66.7 MCshow
grestore
LTb
LCb setrgbcolor
3858 98 M
[ [(Helvetica) 200.0 0.0 true true 0 (epsilon)]
] -66.7 MCshow
LTb
3858 4829 M
[ [(Helvetica) 140.0 0.0 true true 0 (MFT-QCD)]
] -46.7 MCshow
1.000 UP
1.000 UL
LTb
% Begin plot #1
1.000 UP
1.000 UL
LT0
LCb setrgbcolor
6296 4486 M
[ [(Helvetica) 140.0 0.0 true true 0 (B=80;XI=0.0015 )]
] -46.7 MRshow
LT0
6827 4424 Pls
6809 4413 Pls
6791 4401 Pls
6772 4390 Pls
6754 4379 Pls
6736 4367 Pls
6718 4356 Pls
6699 4345 Pls
6681 4333 Pls
6663 4322 Pls
6645 4311 Pls
6627 4300 Pls
6609 4288 Pls
6591 4277 Pls
6572 4266 Pls
6554 4255 Pls
6536 4244 Pls
6518 4232 Pls
6500 4221 Pls
6482 4210 Pls
6464 4199 Pls
6446 4188 Pls
6428 4177 Pls
6410 4166 Pls
6392 4155 Pls
6374 4144 Pls
6356 4132 Pls
6339 4121 Pls
6321 4110 Pls
6303 4099 Pls
6285 4088 Pls
6267 4077 Pls
6249 4066 Pls
6232 4056 Pls
6214 4045 Pls
6196 4034 Pls
6178 4023 Pls
6161 4012 Pls
6143 4001 Pls
6125 3990 Pls
6108 3979 Pls
6090 3968 Pls
6072 3958 Pls
6055 3947 Pls
6037 3936 Pls
6020 3925 Pls
6002 3914 Pls
5984 3904 Pls
5967 3893 Pls
5949 3882 Pls
5932 3871 Pls
5914 3861 Pls
5897 3850 Pls
5879 3839 Pls
5862 3829 Pls
5845 3818 Pls
5827 3807 Pls
5810 3797 Pls
5793 3786 Pls
5775 3775 Pls
5758 3765 Pls
5741 3754 Pls
5723 3744 Pls
5706 3733 Pls
5689 3723 Pls
5672 3712 Pls
5654 3702 Pls
5637 3691 Pls
5620 3681 Pls
5603 3670 Pls
5586 3660 Pls
5569 3649 Pls
5551 3639 Pls
5534 3629 Pls
5517 3618 Pls
5500 3608 Pls
5483 3597 Pls
5466 3587 Pls
5449 3577 Pls
5432 3566 Pls
5415 3556 Pls
5398 3546 Pls
5381 3535 Pls
5364 3525 Pls
5348 3515 Pls
5331 3505 Pls
5314 3495 Pls
5297 3484 Pls
5280 3474 Pls
5263 3464 Pls
5247 3454 Pls
5230 3444 Pls
5213 3433 Pls
5196 3423 Pls
5180 3413 Pls
5163 3403 Pls
5146 3393 Pls
5130 3383 Pls
5113 3373 Pls
5096 3363 Pls
5080 3353 Pls
5063 3343 Pls
5047 3333 Pls
5030 3323 Pls
5014 3313 Pls
4997 3303 Pls
4981 3293 Pls
4964 3283 Pls
4948 3273 Pls
4931 3263 Pls
4915 3253 Pls
4898 3244 Pls
4882 3234 Pls
4866 3224 Pls
4849 3214 Pls
4833 3204 Pls
4817 3194 Pls
4801 3185 Pls
4784 3175 Pls
4768 3165 Pls
4752 3155 Pls
4736 3146 Pls
4719 3136 Pls
4703 3126 Pls
4687 3117 Pls
4671 3107 Pls
4655 3097 Pls
4639 3088 Pls
4623 3078 Pls
4607 3068 Pls
4591 3059 Pls
4575 3049 Pls
4559 3040 Pls
4543 3030 Pls
4527 3021 Pls
4511 3011 Pls
4495 3002 Pls
4479 2992 Pls
4463 2983 Pls
4447 2973 Pls
4431 2964 Pls
4416 2954 Pls
4400 2945 Pls
4384 2935 Pls
4368 2926 Pls
4353 2917 Pls
4337 2907 Pls
4321 2898 Pls
4305 2889 Pls
4290 2879 Pls
4274 2870 Pls
4259 2861 Pls
4243 2852 Pls
4227 2842 Pls
4212 2833 Pls
4196 2824 Pls
4181 2815 Pls
4165 2805 Pls
4150 2796 Pls
4134 2787 Pls
4119 2778 Pls
4104 2769 Pls
4088 2760 Pls
4073 2751 Pls
4057 2742 Pls
4042 2733 Pls
4027 2724 Pls
4011 2714 Pls
3996 2705 Pls
3981 2696 Pls
3966 2687 Pls
3951 2678 Pls
3935 2670 Pls
3920 2661 Pls
3905 2652 Pls
3890 2643 Pls
3875 2634 Pls
3860 2625 Pls
3845 2616 Pls
3830 2607 Pls
3815 2598 Pls
3800 2590 Pls
3785 2581 Pls
3770 2572 Pls
3755 2563 Pls
3740 2555 Pls
3725 2546 Pls
3710 2537 Pls
3695 2528 Pls
3680 2520 Pls
3666 2511 Pls
3651 2502 Pls
3636 2494 Pls
3621 2485 Pls
3607 2476 Pls
3592 2468 Pls
3577 2459 Pls
3563 2451 Pls
3548 2442 Pls
3533 2434 Pls
3519 2425 Pls
3504 2417 Pls
3490 2408 Pls
3475 2400 Pls
3461 2391 Pls
3446 2383 Pls
3432 2374 Pls
3417 2366 Pls
3403 2358 Pls
3388 2349 Pls
3374 2341 Pls
3360 2333 Pls
3345 2324 Pls
3331 2316 Pls
3317 2308 Pls
3303 2299 Pls
3288 2291 Pls
3274 2283 Pls
3260 2275 Pls
3246 2267 Pls
3232 2258 Pls
3218 2250 Pls
3204 2242 Pls
3189 2234 Pls
3175 2226 Pls
3161 2218 Pls
3147 2210 Pls
3133 2202 Pls
3119 2193 Pls
3106 2185 Pls
3092 2177 Pls
3078 2169 Pls
3064 2161 Pls
3050 2153 Pls
3036 2146 Pls
3022 2138 Pls
3009 2130 Pls
2995 2122 Pls
2981 2114 Pls
2968 2106 Pls
2954 2098 Pls
2940 2090 Pls
2927 2083 Pls
2913 2075 Pls
2900 2067 Pls
2886 2059 Pls
2872 2051 Pls
2859 2044 Pls
2845 2036 Pls
2832 2028 Pls
2819 2021 Pls
2805 2013 Pls
2792 2005 Pls
2779 1998 Pls
2765 1990 Pls
2752 1983 Pls
2739 1975 Pls
2725 1967 Pls
2712 1960 Pls
2699 1952 Pls
2686 1945 Pls
2673 1937 Pls
2660 1930 Pls
2646 1923 Pls
2633 1915 Pls
2620 1908 Pls
2607 1900 Pls
2594 1893 Pls
2581 1886 Pls
2568 1878 Pls
2556 1871 Pls
2543 1864 Pls
2530 1856 Pls
2517 1849 Pls
2504 1842 Pls
2491 1835 Pls
2479 1828 Pls
2466 1820 Pls
2453 1813 Pls
2441 1806 Pls
2428 1799 Pls
2415 1792 Pls
2403 1785 Pls
2390 1778 Pls
2378 1771 Pls
2365 1764 Pls
2353 1757 Pls
2340 1750 Pls
2328 1743 Pls
2315 1736 Pls
2303 1729 Pls
2291 1722 Pls
2278 1715 Pls
2266 1708 Pls
2254 1701 Pls
2242 1694 Pls
2229 1688 Pls
2217 1681 Pls
2205 1674 Pls
2193 1667 Pls
2181 1660 Pls
2169 1654 Pls
2157 1647 Pls
2145 1640 Pls
2133 1634 Pls
2121 1627 Pls
2109 1620 Pls
2097 1614 Pls
2085 1607 Pls
2073 1601 Pls
2062 1594 Pls
2050 1588 Pls
2038 1581 Pls
2026 1575 Pls
2015 1568 Pls
2003 1562 Pls
1992 1555 Pls
1980 1549 Pls
1968 1543 Pls
1957 1536 Pls
1945 1530 Pls
1934 1524 Pls
1923 1517 Pls
1911 1511 Pls
1900 1505 Pls
1888 1499 Pls
1877 1493 Pls
1866 1486 Pls
1855 1480 Pls
1844 1474 Pls
1832 1468 Pls
1821 1462 Pls
1810 1456 Pls
1799 1450 Pls
1788 1444 Pls
1777 1438 Pls
1766 1432 Pls
1755 1426 Pls
1744 1420 Pls
1733 1414 Pls
1723 1408 Pls
1712 1402 Pls
1701 1396 Pls
1690 1391 Pls
1680 1385 Pls
1669 1379 Pls
1658 1373 Pls
1648 1368 Pls
1637 1362 Pls
1627 1356 Pls
1616 1350 Pls
1606 1345 Pls
1595 1339 Pls
1585 1334 Pls
1575 1328 Pls
1565 1323 Pls
1554 1317 Pls
1544 1312 Pls
1534 1306 Pls
1524 1301 Pls
1514 1295 Pls
1504 1290 Pls
1494 1285 Pls
1484 1279 Pls
1474 1274 Pls
1464 1269 Pls
1454 1263 Pls
1444 1258 Pls
1434 1253 Pls
1425 1248 Pls
1415 1243 Pls
1405 1238 Pls
1396 1232 Pls
1386 1227 Pls
1377 1222 Pls
1367 1217 Pls
1358 1212 Pls
1348 1207 Pls
1339 1202 Pls
1330 1198 Pls
1320 1193 Pls
1311 1188 Pls
1302 1183 Pls
1293 1178 Pls
1284 1173 Pls
1275 1169 Pls
1266 1164 Pls
1257 1159 Pls
1248 1155 Pls
1239 1150 Pls
1230 1146 Pls
1222 1141 Pls
1213 1137 Pls
1204 1132 Pls
1196 1128 Pls
1187 1123 Pls
1179 1119 Pls
1170 1114 Pls
1162 1110 Pls
1153 1106 Pls
1145 1102 Pls
1137 1097 Pls
1129 1093 Pls
1121 1089 Pls
1113 1085 Pls
1105 1081 Pls
1097 1077 Pls
1089 1073 Pls
1081 1069 Pls
1073 1065 Pls
1065 1061 Pls
1058 1057 Pls
1050 1053 Pls
1043 1050 Pls
1035 1046 Pls
1028 1042 Pls
1021 1039 Pls
1013 1035 Pls
1006 1031 Pls
999 1028 Pls
992 1024 Pls
985 1021 Pls
978 1018 Pls
972 1014 Pls
965 1011 Pls
958 1008 Pls
952 1004 Pls
945 1001 Pls
939 998 Pls
933 995 Pls
926 992 Pls
920 989 Pls
914 986 Pls
908 984 Pls
903 981 Pls
897 978 Pls
891 976 Pls
886 973 Pls
881 971 Pls
875 968 Pls
870 966 Pls
6579 4486 Pls
% End plot #1
1.000 UL
LTb
770 4619 N
770 448 L
6177 0 V
0 4171 V
-6177 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
